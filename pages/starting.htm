<!doctype html>

<html>
<head>

<title>starting...</title>
<meta charset="utf-8"/>

<link href="https://fonts.googleapis.com/css?family=VT323" rel="stylesheet"/>

<style type="text/css">
<!--
::selection{background:green;color:white;}
::-webkit-selection{background:aquamarine;color:white;}
::-moz-selection{background:aquamarine;color:white;}
body{background:#14271e;color:#7ac773;}
*{cursor:default;font-family:'vt323',monospace;line-height:2vw;font-size:2vw;padding:0;outline:0;margin:0;}
#t{position:auto;bottom:absolute;left:35%;width:auto;margin-left:-35%;visibility:hidden;white-space:pre;}
a{color:mediumslateblue;text-decoration:none;border-bottom:1px solid plum;}
code{background:yellow;}
.g{color:yellowgreen;}
.p{color:plum;}
.u{color:red;}
/* t.js-related: */
ins,del{text-decoration:none;}
s{display:none;}
kbd{font-family:inherit;}
 
.t-caret{font-size:inherit;color:#7ac773;}
@media(max-width:800px){#t{width:500px;margin-left:-200px;}}
-->
</style>
<script src="https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js"></script> <!-- 3.3.1 -->
<script src="https://cdn.jsdelivr.net/gh/mntn-dev/t.js/t.min.js"></script>

<script type="text/javascript">
    
	/* функция добавления ведущих нулей */
    /* (если число меньше десяти, перед числом добавляем ноль) */
    function zero_first_format(value)
    {
        if (value < 10)
        {
            value='0'+value;
        }
        return value;
    }

    /* функция получения текущей даты и времени */
    function date_time()
    {
        var current_datetime = new Date();
        var day = zero_first_format(current_datetime.getDate());
        var month = zero_first_format(current_datetime.getMonth()+1);
        var year = current_datetime.getFullYear();
        var hours = zero_first_format(current_datetime.getHours());
        var minutes = zero_first_format(current_datetime.getMinutes());
        var seconds = zero_first_format(current_datetime.getSeconds());

        return day+"."+month+"."+year /*+" "+hours+":"+minutes+":"+seconds*/;
    }
	
    /* каждую секунду получаем текущую дату и время */
    /* и вставляем значение в блок с id "current_date_time_block2" */
    setInterval(function () {
        document.getElementById('current_date_time_block2').innerHTML = date_time();
    }, 1000);
</script>

<script type="text/javascript">
    
setInterval(function() {          
	window.scrollTo(0, document.body.scrollHeight);
}, 1000);
    
//<![CDATA[
$(function(){
 $('#t').t({
  
  delay:2,                   // start delay in seconds [default:0]
  
  speed:50,                  // typing speed (ms) [default:50]
  speed_vary:false,          // 'human like' speed variation [default:false]
  
  beep:true,                 // beep while typing (Web Audio API) [default:false]
  
  mistype:3,                 // mistype rate: 1:N per char [default:false]
  locale:'en',               // keyboard layout (to fit mistype); supported: 'en' (english) or 'de' (german) [default:'en']
  
  caret:'\u2589',            // caret content; can be html too [default:true (\u258e)]
  blink:true,                // blink-interval in ms; if TRUE, speed*3  [default:true]
  blink_perm:false,          // permanent blinking? if FALSE, caret blinks only on delay/pause/finish [default:false]
  repeat:0,                  // repeat typing: if TRUE, infinite or N times [default:0]
  tag:'span',                // wrapper tag (.t-container, .t-caret) [default:'span']
  pause_on_click:true,       // pauses/continues typing on click/tap (elm) [default:false]
  pause_on_tab_switch:true,  // pauses typing if window is inactive (Page Visibility API) [default:false]
  
  // init callback (ready-to-type)
  init:function(elm){},        
  // typing callback
  typing:function(elm,chr_or_elm,left,total){},
  // finished callback
  fin:function(elm){}          
 
 });
/*
        
Methods
  $(elm).t('add',content);         // adds content; shorthand: $(elm).a(content);
  $(elm).t('queue',content);       // queued type processing; shorthand: $(elm).q(content);
  $(elm).t('pause'[,true/false]);  // pauses typing (toggles if 2nd param omitted); shorthand: $(elm).p([true/false]);
  $(elm).t('beep');                // manual beepin' (initialised/not-typing); shorthand: $(elm).b();
  $(elm).t('speed',ms);            // typing speed change at runtime; shorthand: $(elm).s(ms);
  $(elm).t_off([true]);            // destroys typer's instance; if TRUE, also clears content; shorthand: n/a
Data/properties
  $(elm).data().t;                 // TRUE if initialised
  $(elm).data().is_typing;                 // typing
  $(elm).data().paused;                    // paused
# How to stop caret blinking? (e.g., if finished)
 -> https://github.com/mntn-dev/t.js/issues/5#issuecomment-340739907
# Hint: unset default/unwatend styles via CSS
 ins,del{text-decoration:none;}
 kbd{font-family:inherit;}
 s{display:none;}
 [...]
--------
# "Hypertyping Markup Language" Cheatsheet:
<del>*</del> -> clears everything typed before (still stored in case of repeating [repeat:N])
<del>foo</del> -> deletes 'foo' (by default, t.js delays 0.25s before removing)
<del>foo<ins>2</ins></del> -> custom del-delay: numeric-filled <ins> inside <del>
<del>select me<s>red,white</s></del> -> text selection: <s> inside <del> (comma seperated background/forground color values, or .class name)
(!) Note: except <ins> and <s>, <del> doesn't handle nested html-tags (dropped)
<ins>2.5</ins> -> stops typing for 2.5 seconds (numeric-filled)
<ins>content to <u>insert</u></ins> -> inserts instantly (non-numeric)
<kbd>some <strong>typing text</strong></kbd> -> will apply setting's mistype[=1:N] rate here (will be 10 if unset)
<s>20</s> -> changes typing speed to 20 milliseconds
*/
  
});
//]]>
</script>
</head>
<body>
<div id="t">
Starting LOL-DOS...

~~~~~~~~
Da<del>aaaaa</del>te:<div id="current_date_time_block2"></div><ins>1</ins>~~~~~~~~
<ins>1.5</ins><s>10</s><strong><span class="u">
  ___   _   _______ ___________ _   _ _____  _   _ _____ _   _______ _____ _   _ _____ 
 / _ \ | \ | |  _  \  _  | ___ \ | | /  __ \| | | |  _  | | / /  _  /  ___| | | |_   _|
/ /_\ \|  \| | | | | | | | |_/ / | | | /  \/| |_| | | | | |/ /| | | \ `--.| |_| | | |  
|  _  || . ` | | | | | | |    /| | | | |    |  _  | | | |    \| | | |`--. \  _  | | |  
| | | || |\  | |/ /\ \_/ / |\ \| |_| | \__/\| | | \ \_/ / |\  \ \_/ /\__/ / | | |_| |_ 
\_| |_/\_| \_/___/  \___/\_| \_|\___/ \____/\_| |_/\___/\_| \_/\___/\____/\_| |_/\___/ 
</span></strong>
<s>50</s>https://www.twitch.tv/andoruchokoshi (@andoruchokoshi)

<ins>1.5</ins>C:\>start

Oops!<ins>1</ins> ERR_FILE_SYSTEM_NOT_FOUND :(<ins>2</ins>

<kbd>Report a crash</kbd>.
<u title="Hypertext Markup Language">Starting Crash Reeport.zip</u>
    
<ins>1</ins>Sending...<ins>1</ins><ins>1</ins>Done!<ins>1</ins>

Starting LOL-DOS...<ins>1</ins>
Scanning drive...<ins>1</ins>

F:\>start
F:\>F:\DOS\blablabla.exe

<s>10</s>
00EX00 - Lorem ipsum dolor sit amet
00EX01 - consectetur adipiscing elit
00EX02 - sed do eiusmod tempor incididunt ut labore et dolore magna aliqua
00EX03 - Ut enim ad minim veniam
00EX04 - quis nostrud exercitation ullamco laboris nisi ut aliquip ex
00EX05 - Duis aute irure dolor in reprehenderit in voluptate
00EX06 - velit esse cillum dolore eu fugiat nulla pariatur
00EX07 - Excepteur sint occaecat cupidatat non proident
00EX08 - sunt in culpa qui officia deserunt mollit anim id est laborum

<s>50</s>F:\>LOL\OK\Waiting.exe :)

</div>
<br/>
</body>
</html>
